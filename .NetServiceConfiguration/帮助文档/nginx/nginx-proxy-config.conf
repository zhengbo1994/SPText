server {
	listen 8070;
	server_name 192.168.3.245 localhost 127.0.0.1;
	location / {
		proxy_pass http://webs;
	}
}

#设置缓存空间，存储缓存文件
proxy_cache_path /usr/local/nginx/cache levels=1:2 keys_zone=nginx-cache:20m max_size=50g inactive=168h;

server {
	listen 8090;
	server_name 192.168.3.245 localhost 127.0.0.1;
	
	#客户端请求主体的缓冲区大小
	client_body_buffer_size 512k;
	#客户端请求头部的缓冲区大小，这个可以根据系统分页大小来设置
	client_header_buffer_size 4k;
	client_max_body_size 512k;
	large_client_header_buffers 2 8k;
	proxy_buffer_size 16k;
	proxy_buffers 4 64k;
	proxy_busy_buffers_size 128k;
	proxy_temp_file_write_size 128k;
	#指定在何种情况下一个失败的请求应该被发送到下一台后端服务器
	proxy_next_upstream http_502 http_504 http_404 error timeout invalid_header;
	
	location / {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_cache nginx-cache;
		proxy_cache_valid 200 304 302 5d;
		proxy_cache_valid any 5d;
		proxy_cache_key '$host:$server_port$request_uri';
		add_header X-Cache '$upstream_cache_status from $host';
		proxy_set_header X-Real-IP $remote_addr;
		proxy_pass http://192.168.3.205:5016;
	}
}


server {
	listen 9090;
	server_name 192.168.3.245 localhost 127.0.0.1;
	
	location ~ .*\.(eot|svg|ttf|woff|jpg|jpeg|gif|png|ico|cur|gz|svgz|mp4|ogg|ogv|webm|js|css)$ {
		#所有静态文件直接读取硬盘
		root html;
		expires 30d; #缓存30天
	}
	
	location / {
		try_files /usr/local/nginx/html/search.html $uri $uri/index.html $uri.html @mongrel;
	}

	location @mongrel {
		proxy_pass http://192.168.3.205:5016;
	}
}